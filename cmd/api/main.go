package main

import (
	"log"
	"os"

	"github.com/RozhkoDmytro/SpyCatAgency/internal/config"
	"github.com/RozhkoDmytro/SpyCatAgency/internal/middleware"
	"github.com/RozhkoDmytro/SpyCatAgency/internal/router"
	"github.com/RozhkoDmytro/SpyCatAgency/internal/service"
	"github.com/joho/godotenv"
)

func main() {
	logFile, err := middleware.InitMiddlewareLogger()
	if err != nil {
		log.Fatal("‚ùå Failed to initialize middleware logger:", err)
	}
	defer logFile.Close()

	if err := godotenv.Load(); err != nil {
		log.Println("‚ö†Ô∏è Warning: No .env file found, using default env variables")
	}

	if err := service.LoadBreeds(); err != nil {
		log.Fatal("‚ùå Failed to load cat breeds:", err) // –ó—É–ø–∏–Ω—è—î–º–æ –ø—Ä–æ–≥—Ä–∞–º—É, —è–∫—â–æ —Å–ø–∏—Å–æ–∫ –Ω–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
	}

	db := config.InitDB()

	r := router.InitRouter(db)

	port := os.Getenv("PORT")
	if port == "" {
		port = "8080"
	}

	log.Println("üöÄ Spy Cat Agency API is running on port " + port + "...")
	r.Run(":" + port)
}
